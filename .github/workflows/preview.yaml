name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  pull_request:
    branches: ["main"]
    types: [labeled]

jobs:
  Check-Ready-To-Dev-Label:
    runs-on: ubuntu-latest

    steps:
      - name: Check if 'ready-to-dev' label is present
        id: check_label
        run: |
          PR_NUMBER=$(curl -sSL "${{ github.api_url }}/repos/${{ github.repository }}/pulls?head=${{ github.head_ref }}&base=${{ github.base_ref }}" | jq -r ".[0].number")
          LABEL_PRESENT=$(curl -sSL "${{ github.api_url }}/repos/${{ github.repository }}/issues/${PR_NUMBER}/labels" | jq -r '.[].name' | grep 'ready-to-dev' || true)
          echo "LABEL_PRESENT=$LABEL_PRESENT" >> $GITHUB_ENV

      - name: Exit if 'ready-to-dev' label is not present
        run: exit ${{ steps.check_label.outputs.LABEL_PRESENT == 'ready-to-dev' }}

  Deploy-Preview:
    if: success()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: yarn global add --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Install Dependencies and Health Code
        run: yarn install && yarn lint && yarn build
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
